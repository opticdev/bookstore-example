ruleset:
  - breaking-changes
  - naming:
      required_on: always
      properties: camelCase
      pathComponents: snake_case
      queryParameters: snake_case
capture:
  openapi.yml:
    # üîß Runnable example with simple get requests.
    # Run with "optic capture openapi.yml --update interactive"
    # You can run your actual tests through the Optic proxy with the `command` option (next example)
    server:
      url: https://api.useoptic.com/
    requests:
      send:
        - path: /books
          method: GET
        - path: /books/WjE9O1d8ELCb8POiOw4pn
          method: GET
        - path: /authors/tNpOpQZbxytxTxDT15GQy
          method: GET
    # When you are ready, set up an actual integration that run your test suite
    # Read reference docs here: https://www.useoptic.com/docs/capturing-traffic#configuration-reference
    # server:
    #   # üîß Update this to the command to run your server.
    #   # Optional: If omitted, Optic assumes the server is running or started elsewhere.
    #   command: npm dev
    #   # üîß Update this url to where your server can be reached.
    #   url: http://localhost:8080
    # requests:
    #   # ‚ÑπÔ∏è Requests should be sent to the Optic proxy, the address of which is injected into 'run.command's env as OPTIC_PROXY (or the value of 'run.proxy_variable').
    #   run:
    #     # üîß Specify a command that will generate traffic
    #     command: test
    #     # üîß OPTIC_PROXY is added to your command's env and contains the URL of an Optic's local reverse proxy. Your command should send its requests to this URL.
    #     proxy_variable: OPTIC_PROXY
